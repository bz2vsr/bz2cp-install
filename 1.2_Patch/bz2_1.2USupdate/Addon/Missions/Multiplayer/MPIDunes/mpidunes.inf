[DESCRIPTION]
missionName = "MPI: Instant Dunes"
mapTga = "mpidunes.bmp"
mapDesc = "mpidunes.odf"
mySide = 1

[NetVars]
// For master list of descriptions, see source\network\vars.txt
ivar0 = 0 // Kill limit, 0= unlimited
ivar1 = 0 // Time limit, 0= unlimited
ivar2 = 4 // player limit. Commenting out this line means current setting not changed
ivar3 = 1 // 1=Teamplay on, 0=Teamplay off
ivar4 = 786432 // Bitfields saying which vehicles out of mpvehicles.txt are allowable. 33= both scouts
ivar5 = 2 // All=0, DM=1, Strat=2, all other values undefined (used in filters)
ivar6 = 0 // Vehicles allowable II (if ever implemented)
ivar7 = 2 // Strategy02.dll starting prefs: turrets at AI level 2, rest AI 0, default scrap, nothing extra [see vars.txt for gory details on bits]
ivar8 = 0 // Sync Join. 0=off, 1=on.

// Svar0 (.bzn filename, used to look for an .inf file like this)
// *not* read in, as that would cause an infinite loop
ivar9 = 30 //unit limit, 0 is unlimited
ivar11 = 1 // locks team play
ivar12 = 1	// lock all to team 1

svar1 = "Team Humans" // Team name for team 1
svar2 = "Team Computer" // Team name for team 2

// Custom AIP name base. The MPInstant.dll will look for several files
// based on this base, with 3 characters tacked on. Those 3 are as
// follows: (1) CPU race (f=Scion, i=isdf), (2) Human race, (3) AIP
// Type (0=Start, 1-3 = begin game types, 'a' == anti-assault, 's' ==
// siege, 'l' = lategame).
//
// If an AIP file is not found, results may be unpredictable. [The AI
// will probably go to sleep, but haven't tested that.]
//
// For example, if svar3 == "foo", at the start of the game, the AIP
// used will be one of these 4 files:
// fooii0.aip  -- CPU ISDF, Human ISDF
// fooif0.aip  -- CPU ISDF, Human Scion
// foofi0.aip  -- CPU Scion, Human ISDF
// fooff0.aip  -- CPU Scion, Human Scion
// svar3 = "MyAIPs"  // Line commented out like this means default AIPs
